{# /app/templates/security/login.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Log in!{% endblock %}
{% block stylesheets %}
     <meta charset="utf-8">
     <link rel="icon" href="images/favicon.ico">
         <link rel="manifest" href="manifest.json">

     <link rel="shortcut icon" href="images/favicon.ico" />
     <link rel="stylesheet" href="css/login.css">
              <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

{% endblock %}

{% block body %}
<div id="login">    
    <div id="triangle"></div>
      <h1>{% trans %}Authenticate{% endtrans %}</h1>
<form method="post" id="auth">
    {# If there's any error, display it to the user #}
    {% if error %}
        <div class="alert alert-danger">{{ error.messageKey|trans(error.messageData, 'security') }}</div>
    {% endif %}

    {# Email Input #}
    <input type="username" value="{{ last_username }}" name="username" id="inputUsername"  placeholder="Username" required autofocus>
    
    {# Password Input #}
    <input type="password" name="password" id="inputPassword" placeholder="Password" required>
    
    {# CSRF Token Input #}
    <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}" />

    <input type="submit" value="{% trans %}Authenticate{% endtrans %}" />


    <button class="add-button">Add to home screen</button>
  </body>
</form>
</div>
<script>

if('serviceWorker' in navigator) {
  navigator.serviceWorker
           .register('/js/service-worker.js')
           .then(function() { console.log('Service Worker Registered'); });
}



let deferredPrompt;
const addBtn = document.querySelector('.add-button');
addBtn.style.display = 'none';

window.addEventListener('beforeinstallprompt', (e) => {
  // Prevent Chrome 67 and earlier from automatically showing the prompt
  e.preventDefault();
  // Stash the event so it can be triggered later.
  deferredPrompt = e;
  // Update UI to notify the user they can add to home screen
  addBtn.style.display = 'block';

  addBtn.addEventListener('click', (e) => {
    // hide our user interface that shows our A2HS button
    addBtn.style.display = 'none';
    // Show the prompt
    deferredPrompt.prompt();
    // Wait for the user to respond to the prompt
    deferredPrompt.userChoice.then((choiceResult) => {
        if (choiceResult.outcome === 'accepted') {
          console.log('User accepted the A2HS prompt');
        } else {
          console.log('User dismissed the A2HS prompt');
        }
        deferredPrompt = null;
      });
  });
});
</script>
{% endblock %}